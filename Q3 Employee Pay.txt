-- Create tables with appropriate integrity constraints
CREATE TABLE employee (
    emp_id INTEGER PRIMARY KEY,
    emp_name VARCHAR(50)
);

CREATE TABLE department (
    dept_id INTEGER PRIMARY KEY,
    dept_name VARCHAR(50)
);

CREATE TABLE paydetails (
    emp_id INTEGER,
    dept_id INTEGER,
    basic INTEGER,
    deductions INTEGER,
    additions INTEGER,
    DOJ DATE,
    FOREIGN KEY (emp_id) REFERENCES employee(emp_id),
    FOREIGN KEY (dept_id) REFERENCES department(dept_id)
);

CREATE TABLE payroll (
    emp_id INTEGER,
    pay_date DATE,
    FOREIGN KEY (emp_id) REFERENCES employee(emp_id)
);

-- Insert around 10 records in each of the tables
INSERT INTO employee VALUES
(1, 'John'),
(2, 'Alice'),
(3, 'Bob'),
(4, 'Emily'),
(5, 'David'),
(6, 'Sarah'),
(7, 'Michael'),
(8, 'Emma'),
(9, 'Daniel'),
(10, 'Olivia');

INSERT INTO department VALUES
(1, 'HR'),
(2, 'Finance'),
(3, 'IT'),
(4, 'Marketing'),
(5, 'Operations');

INSERT INTO paydetails VALUES
(1, 1, 15000, 2000, 1000, '2023-01-15'),
(2, 2, 18000, 2500, 1200, '2022-12-20'),
(3, 3, 20000, 3000, 1500, '2023-03-10'),
(4, 4, 16000, 2200, 1100, '2023-02-05'),
(5, 1, 17000, 2300, 1200, '2023-05-08'),
(6, 2, 19000, 2700, 1300, '2023-04-15'),
(7, 3, 22000, 3500, 1800, '2023-06-20'),
(8, 4, 17500, 2400, 1300, '2023-08-25'),
(9, 1, 16500, 2100, 1000, '2023-07-10'),
(10, 5, 19500, 2600, 1400, '2023-09-15');

INSERT INTO payroll VALUES
(1, '2024-04-30'),
(2, '2024-04-30'),
(3, '2024-04-30'),
(4, '2024-04-30'),
(5, '2024-04-30'),
(6, '2024-04-30'),
(7, '2024-04-30'),
(8, '2024-04-30'),
(9, '2024-04-30'),
(10, '2024-04-30');

-- List the employee details department wise
SELECT e.emp_name, d.dept_name
FROM employee e
JOIN paydetails pd ON e.emp_id = pd.emp_id
JOIN department d ON pd.dept_id = d.dept_id;

-- List all the employee names who joined after particular date
SELECT emp_name
FROM employee
WHERE emp_id IN (SELECT emp_id FROM paydetails WHERE DOJ > '2023-03-01');

-- List the details of employees whose basic salary is between 10,000 and 20,000
SELECT *
FROM paydetails
WHERE basic BETWEEN 10000 AND 20000;

-- Give a count of how many employees are working in each department
SELECT d.dept_name, COUNT(*) as num_employees
FROM department d
JOIN paydetails pd ON d.dept_id = pd.dept_id
GROUP BY d.dept_name;

-- Give the names of the employees whose net salary > 10,000
SELECT emp_name
FROM employee
WHERE emp_id IN (
    SELECT emp_id
    FROM (
        SELECT emp_id, (basic + additions - deductions) AS net_salary
        FROM paydetails
    ) AS net_salaries
    WHERE net_salary > 10000
);

-- List the details for an employee_id=5
SELECT *
FROM paydetails
WHERE emp_id = 5;

-- Create a view which lists out the emp_name, department, basic, deductions, netsalary
CREATE VIEW employee_pay_details AS
SELECT e.emp_name, d.dept_name, pd.basic, pd.deductions, (pd.basic + pd.additions - pd.deductions) AS net_salary
FROM employee e
JOIN paydetails pd ON e.emp_id = pd.emp_id
JOIN department d ON pd.dept_id = d.dept_id;

-- Create a view which lists the emp_name and his netsalary
CREATE VIEW employee_net_salary AS
SELECT e.emp_name, (pd.basic + pd.additions - pd.deductions) AS net_salary
FROM employee e
JOIN paydetails pd ON e.emp_id = pd.emp_id;
