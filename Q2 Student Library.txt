-- Create tables with appropriate integrity constraints
CREATE TABLE Student (
    Stud_no INTEGER PRIMARY KEY,
    Stud_name VARCHAR(100) NOT NULL
);

CREATE TABLE Membership (
    Mem_no INTEGER PRIMARY KEY,
    Stud_no INTEGER,
    FOREIGN KEY (Stud_no) REFERENCES Student(Stud_no)
);

CREATE TABLE Book (
    Book_no INTEGER PRIMARY KEY,
    Book_name VARCHAR(100) NOT NULL,
    Author VARCHAR(100) NOT NULL
);

CREATE TABLE Iss_rec (
    Iss_no INTEGER PRIMARY KEY,
    Iss_date DATE,
    Mem_no INTEGER,
    Book_no INTEGER,
    FOREIGN KEY (Mem_no) REFERENCES Membership(Mem_no),
    FOREIGN KEY (Book_no) REFERENCES Book(Book_no)
);

-- Insert around 10 records in each table
INSERT INTO Student (Stud_no, Stud_name) VALUES
(1, 'Alice'),
(2, 'Bob'),
(3, 'Charlie'),
(4, 'David'),
(5, 'Eva'),
(6, 'Frank'),
(7, 'Grace'),
(8, 'Hannah'),
(9, 'Ian'),
(10, 'Jane');

INSERT INTO Membership (Mem_no, Stud_no) VALUES
(101, 1),
(102, 2),
(103, 3),
(104, 4),
(105, 5),
(106, 6),
(107, 7),
(108, 8),
(109, 9),
(110, 10);

INSERT INTO Book (Book_no, Book_name, Author) VALUES
(201, 'Book1', 'Author1'),
(202, 'Book2', 'Author2'),
(203, 'Book3', 'Author3'),
(204, 'Book4', 'CJDATE'),
(205, 'Book5', 'Author5'),
(206, 'Book6', 'Author6'),
(207, 'Book7', 'CJDATE'),
(208, 'Book8', 'Author8'),
(209, 'Book9', 'Author9'),
(210, 'Book10', 'Author10');

INSERT INTO Iss_rec (Iss_no, Iss_date, Mem_no, Book_no) VALUES
(301, '2024-05-06', 101, 201),
(302, '2024-05-06', 102, 202),
(303, '2024-05-06', 103, 203),
(304, '2024-05-06', 104, 204),
(305, '2024-05-06', 105, 205),
(306, '2024-05-06', 106, 206),
(307, '2024-05-06', 107, 207),
(308, '2024-05-06', 108, 208),
(309, '2024-05-06', 109, 209),
(310, '2024-05-06', 110, 210);

-- List all the student names with their membership numbers
SELECT s.Stud_name, m.Mem_no
FROM Student s
JOIN Membership m ON s.Stud_no = m.Stud_no;

-- List all the issues for the current date with student and Book names
SELECT s.Stud_name, b.Book_name
FROM Iss_rec i
JOIN Membership m ON i.Mem_no = m.Mem_no
JOIN Student s ON m.Stud_no = s.Stud_no
JOIN Book b ON i.Book_no = b.Book_no
WHERE i.Iss_date = CURRENT_DATE;

-- List the details of students who borrowed book whose author is CJDATE
SELECT s.Stud_name, b.Book_name
FROM Iss_rec i
JOIN Membership m ON i.Mem_no = m.Mem_no
JOIN Student s ON m.Stud_no = s.Stud_no
JOIN Book b ON i.Book_no = b.Book_no
WHERE b.Author = 'CJDATE';

-- Give a count of how many books have been bought by each student
SELECT s.Stud_name, COUNT(i.Iss_no) AS Num_of_books_borrowed
FROM Iss_rec i
JOIN Membership m ON i.Mem_no = m.Mem_no
JOIN Student s ON m.Stud_no = s.Stud_no
GROUP BY s.Stud_name;

-- Give a list of books taken by student with stud_no as 5
SELECT b.Book_name
FROM Iss_rec i
JOIN Book b ON i.Book_no = b.Book_no
WHERE i.Mem_no = (SELECT Mem_no FROM Membership WHERE Stud_no = 5);

-- Create a view which lists out the iss_no, iss _date, stud_name, book name
CREATE VIEW Issue_Details AS
SELECT i.Iss_no, i.Iss_date, s.Stud_name, b.Book_name
FROM Iss_rec i
JOIN Membership m ON i.Mem_no = m.Mem_no
JOIN Student s ON m.Stud_no = s.Stud_no
JOIN Book b ON i.Book_no = b.Book_no;

-- Create a view which lists the daily issues-date wise for the last one week
CREATE VIEW Weekly_Issues AS
SELECT i.Iss_no, i.Iss_date, s.Stud_name, b.Book_name
FROM Iss_rec i
JOIN Membership m ON i.Mem_no = m.Mem_no
JOIN Student s ON m.Stud_no = s.Stud_no
JOIN Book b ON i.Book_no = b.Book_no
WHERE i.Iss_date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 1 WEEK) AND CURRENT_DATE;
